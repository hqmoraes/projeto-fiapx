#!/bin/bash

# Script para verificar e preparar o ambiente Kubernetes
# Autor: GitHub Copilot
# Data: 26/06/2025

echo "üîç Verificando e preparando o ambiente Kubernetes..."

# Verificar se o kubectl est√° instalado
if ! command -v kubectl &> /dev/null; then
    echo "‚ùå kubectl n√£o encontrado. Por favor, instale kubectl."
    exit 1
fi

# Configurar o t√∫nel SSH para o cluster Kubernetes
echo "üîÑ Configurando t√∫nel SSH para o cluster Kubernetes..."
if [ -f "./setup-k8s-tunnel.sh" ]; then
    # Encerrar qualquer t√∫nel existente
    ./setup-k8s-tunnel.sh stop 2>/dev/null || true
    
    # Iniciar novo t√∫nel
    ./setup-k8s-tunnel.sh
    
    # Exportar o KUBECONFIG
    export KUBECONFIG="$(pwd)/kubeconfig.yaml"
else
    echo "‚ùå Script setup-k8s-tunnel.sh n√£o encontrado. √â obrigat√≥rio para acessar o cluster remoto."
    exit 1
fi

# Verificar a conex√£o com o cluster
echo "üîç Verificando conex√£o com o cluster Kubernetes..."
kubectl cluster-info
if [ $? -ne 0 ]; then
    echo "‚ùå N√£o foi poss√≠vel conectar ao cluster Kubernetes. Verifique sua configura√ß√£o."
    exit 1
fi

# Criar namespace fiapx se n√£o existir
NAMESPACE=${1:-fiapx}
echo "üîÑ Verificando namespace '$NAMESPACE'..."
kubectl get namespace $NAMESPACE > /dev/null 2>&1
if [ $? -ne 0 ]; then
    echo "üìÅ Criando namespace '$NAMESPACE'..."
    kubectl apply -f infrastructure/kubernetes/namespace.yaml
else
    echo "‚úÖ Namespace '$NAMESPACE' j√° existe."
fi

# Verificar cotas e limites do namespace
echo "üîÑ Verificando resource quotas para o namespace '$NAMESPACE'..."
kubectl get resourcequota -n $NAMESPACE > /dev/null 2>&1
if [ $? -ne 0 ]; then
    echo "üìä Aplicando resource quotas para o namespace '$NAMESPACE'..."
    kubectl apply -f infrastructure/kubernetes/resource-quotas.yaml -n $NAMESPACE
else
    echo "‚úÖ Resource quotas j√° configuradas para o namespace '$NAMESPACE'."
fi

# Verificar se o contexto atual aponta para o cluster remoto
CURRENT_CONTEXT=$(kubectl config current-context)
echo "üîÑ Contexto Kubernetes atual: $CURRENT_CONTEXT"

# Verificar n√≥s do cluster
echo "üîç Verificando n√≥s do cluster Kubernetes..."
kubectl get nodes -o wide

# Verificar as vers√µes das ferramentas dispon√≠veis no cluster
echo "üîç Verificando vers√µes das ferramentas no cluster..."
echo "Kubernetes: $(kubectl version --short | grep 'Server Version' | awk '{print $3}')"

# Verificar se imagens de container podem ser puxadas
echo "üîÑ Verificando acesso a registry de containers..."
kubectl run test-pull --image=nginx:alpine --restart=Never -n $NAMESPACE --dry-run=client -o yaml > /dev/null
if [ $? -ne 0 ]; then
    echo "‚ö†Ô∏è Pode haver problemas ao puxar imagens de container. Verifique a configura√ß√£o do registry."
else
    echo "‚úÖ Acesso a registry de containers parece estar ok."
fi

echo "‚úÖ Ambiente Kubernetes verificado e preparado com sucesso!"
echo ""
echo "Para utilizar o kubectl com este cluster, utilize:"
echo "export KUBECONFIG=$(pwd)/kubeconfig.yaml"
echo ""
echo "Para implantar a aplica√ß√£o, execute:"
echo "./scripts/deploy.sh $NAMESPACE"
