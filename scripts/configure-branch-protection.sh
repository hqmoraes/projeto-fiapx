#!/bin/bash

# Script para configurar prote√ß√£o de branches nos reposit√≥rios FIAP-X
# Requer GITHUB_TOKEN com permiss√µes de admin nos reposit√≥rios

set -e

GITHUB_TOKEN="${GITHUB_TOKEN:-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}"

if [ -z "$GITHUB_TOKEN" ]; then
    echo "‚ùå GITHUB_TOKEN n√£o definido"
    exit 1
fi

# Lista de reposit√≥rios
repos=(
    "hqmoraes/fiapx-auth-service"
    "hqmoraes/fiapx-upload-service"
    "hqmoraes/fiapx-processing-service"  
    "hqmoraes/fiapx-storage-service"
    "hqmoraes/fiapx-frontend"
)

# Configura√ß√£o de prote√ß√£o
protection_config='{
  "required_status_checks": {
    "strict": true,
    "contexts": []
  },
  "enforce_admins": true,
  "required_pull_request_reviews": {
    "required_approving_review_count": 1,
    "dismiss_stale_reviews": true,
    "require_code_owner_reviews": false,
    "bypass_pull_request_allowances": {
      "users": [],
      "teams": []
    }
  },
  "restrictions": null,
  "allow_force_pushes": false,
  "allow_deletions": false
}'

echo "üîß Configurando prote√ß√£o de branches..."
echo "üìã Reposit√≥rios: ${#repos[@]}"
echo ""

for repo in "${repos[@]}"; do
    echo "‚öôÔ∏è  Configurando prote√ß√£o para $repo..."
    
    # Configurar prote√ß√£o da branch main
    response=$(curl -s -w "%{http_code}" -X PUT \
        -H "Authorization: token $GITHUB_TOKEN" \
        -H "Accept: application/vnd.github.v3+json" \
        -H "Content-Type: application/json" \
        "https://api.github.com/repos/$repo/branches/main/protection" \
        -d "$protection_config")
    
    http_code="${response: -3}"
    
    if [ "$http_code" = "200" ]; then
        echo "‚úÖ $repo - Prote√ß√£o configurada com sucesso"
    elif [ "$http_code" = "422" ]; then
        echo "‚ö†Ô∏è  $repo - Prote√ß√£o j√° existe (HTTP $http_code)"
    else
        echo "‚ùå $repo - Erro ao configurar prote√ß√£o (HTTP $http_code)"
    fi
    
    sleep 1
done

echo ""
echo "üéâ Configura√ß√£o conclu√≠da!"
echo ""
echo "üìñ Regras aplicadas:"
echo "   ‚úÖ Pull Request obrigat√≥rio para merge na main"
echo "   ‚úÖ Pelo menos 1 aprova√ß√£o necess√°ria"
echo "   ‚úÖ Reviews antigas descartadas em novos commits"
echo "   ‚úÖ Administradores tamb√©m seguem as regras"
echo "   ‚úÖ Force push bloqueado"
echo "   ‚úÖ Dele√ß√£o da branch bloqueada"
echo ""
echo "üîÑ Fluxo de trabalho:"
echo "   1. Desenvolver na branch 'validar'"
echo "   2. Push para 'validar'"
echo "   3. Criar Pull Request: validar ‚Üí main"
echo "   4. Workflow CI executa automaticamente"
echo "   5. Aprova√ß√£o necess√°ria antes do merge"
echo "   6. Merge para main ‚Üí Deploy autom√°tico"
